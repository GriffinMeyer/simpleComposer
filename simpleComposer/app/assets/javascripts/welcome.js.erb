
// Wait until the page is loaded
// to start the javascript calls
window.onload = function(){
//get canvas from html
var c = document.getElementById("canvas");
//get context from canvas
var ctx = c.getContext("2d");
//
var timeSigA;
var timeSigB;
//global var for note placement
var currNote = "quarter";

var placedNotes = new Array();

var tempo;
// Global canvas size vars
 var globalWidth = window.innerWidth/1.5;
 var globalHeight = (window.innerHeight/3)*2;
// Global mouse position

function getTimeSig(){
	ctx.font="21px serif";
	var sigY = 74;
	var sigY2 = 91;
	var timeS = document.getElementById('timeSig').value;
	timeSigA = "";
	timeSigB = "";
	if(timeS == "FourFour"){
		timeSigA = "4";
		timeSigB = "4";
	}
	if(timeS == "ThreeFourth"){
		timeSigA = "3";
		timeSigB = "4";
	}
	if(timeS == "TwoFourth"){
		timeSigA = "2";
		timeSigB = "4";
	}
	if(timeS == "TwoTwo"){
		timeSigA = "2";
		timeSigB = "2";
	}
	if(timeS == "ThreeEighth"){
		timeSigA = "3";
		timeSigB = "8";
	}
	for(var num = 0; num<10;num++){
		ctx.fillText(timeSigA,(ctx.canvas.width/6)+20, sigY);
		ctx.fillText(timeSigB,(ctx.canvas.width/6)+20, sigY2);
		sigY+=80;
		sigY2+=80;
	}
	
}

var mousePos = {
	x: 0,
	y: 0
}

function clear(){
	ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);
}

//Update position of mouse on mouse movement
c.addEventListener('mousemove', function(e){
	mousePos.x = e.offsetX || e.layerX;
	mousePos.y = e.offsetY || e.layerY;
});

//Onclick check
c.addEventListener("mousedown", checkClickLocation, false);

//check click location
function checkClickLocation(e){
	if(mousePos.x < 20){
		buttonCheck();
	}else{
		placeNote(e);
	}
}

// Note object
function note (type, x, y){
	this.type = type;
	this.x = x;
	this.y = y;
}

function placeNote(e){
	console.log("placedNote");
	placedNotes.push(new note(currNote, mousePos.x, mousePos.y));
}

function note(noteType, x, y){
	this.noteType = noteType;
	this.x = x;
	this.y = y;
}

function drawNote(noteType, x, y){
	if(noteType == "eight"){
		draw8Note(Math.round(x/14)*14,Math.round(y/4)*4);
	}
	if(noteType == "quarter"){
		drawQuarterNote(Math.round(x/14)*14,Math.round(y/4)*4);
	}
	if(noteType == "dot"){
		drawDotNote(Math.round(x/14)*14,Math.round(y/4)*4);
	}
	if(noteType == "half"){
		drawHalfNote(Math.round(x/14)*14,Math.round(y/4)*4);
	}
	if(noteType == "whole"){
		drawWholeNote(Math.round(x/14)*14,Math.round(y/4)*4);
	}
}

function drawPlacedNotes(){
	for(x in placedNotes){
		console.log("placed");
		drawNote(placedNotes[x].noteType, placedNotes[x].x, placedNotes[x].y);
	}
}

function drawCursorNote(){
	if(currNote == "eight"){
		drawNote("eight",mousePos.x,mousePos.y);
	}
	if(currNote == "quarter"){
		drawNote("quarter",mousePos.x,mousePos.y);
	}
	if(currNote == "dot"){
		drawNote("dot",mousePos.x,mousePos.y);
	}
	if(currNote == "half"){
		drawNote("half",mousePos.x,mousePos.y);
	}
	if(currNote == "whole"){
		drawNote("whole",mousePos.x,mousePos.y);
	}

	
}

// Get tempo from html input
function getTempo(){
	ctx.font="12px Ariel";
	var y = document.getElementById('slider1').value;
	var bpm = tempo + "  -" + y;
	ctx.fillText(bpm,(ctx.canvas.width/6)+25.5,50.5);

	var tempoName = document.getElementById('tempo').value;
	var minRange = document.getElementById('slider1');

	var maxRange = document.getElementById('slider1');

	if(tempoName == "Larghissimo"){
		tempo = "Larghissimo– very, very slow (24bpm)";
		minRange.min = 24;
		maxRange.max = 24;
	}
	if(tempoName == "Grave"){
		tempo = "Grave– very slow (25–45 BPM)";
		minRange.min = 25;
		maxRange.max = 45;	
	}
	if(tempoName == "Largo"){
		tempo = "Largo– broadly (40–60 BPM)";
		minRange.min = 40;
		maxRange.max = 60;
	}
	if(tempoName == "Lento"){
		tempo = "Lento– slowly (45–60 BPM)";
		minRange.min = 45;
		maxRange.max = 60;
	}
	if(tempoName == "Larghetto"){
		tempo = "Larghetto– rather broadly (60–66 BPM)";
		minRange.min = 60;
		maxRange.max = 66;
	}
	if(tempoName == "Adagio"){
		tempo = "Adagio– slow and stately (literally, at ease) (66–76 BPM)";
		minRange.min = 66;
		maxRange.max = 76;
	}
	if(tempoName == "Adagietto"){
		tempo = "Adagietto– slower than andante (72–76 BPM)";
		minRange.min = 72;
		maxRange.max = 76;
	}
	if(tempoName == "Andante"){
		tempo = "Andante– at a walking pace (76–108 BPM)";
		minRange.min = 76;
		maxRange.max = 108;
	}
	if(tempoName == "Andantino"){
		tempo = "Andantino – slightly faster than Andante(80–108 BPM)";
		minRange.min = 80;
		maxRange.max = 108;
	}
	if(tempoName == "Marcia moderato"){
		tempo = "Marcia moderato – moderately, in the manner of a march (83–85 BPM)";
		minRange.min = 83;
		maxRange.max = 85;
	}
	if(tempoName == "Andante moderato"){
		tempo = "Andante moderato – between andante and moderato  (92–112 BPM)";
		minRange.min = 92;
		maxRange.max = 112;
	}
	if(tempoName == "Moderato"){
		tempo = "Moderato – moderately (108–120 BPM)";
		minRange.min = 108;
		maxRange.max = 120;
	}
	if(tempoName == "Allegretto"){
		tempo = "Moderato – moderately (108–120 BPM)";
		minRange.min = 112;
		maxRange.max = 120;
	}
	if(tempoName == "Allegro moderato"){
		tempo = "Moderato – moderately (108–120 BPM)";
		minRange.min = 116;
		maxRange.max = 120;
	}
	if(tempoName == "Allegro"){
		tempo = "Allegro – fast, quickly, and bright (120–168 BPM)";
		minRange.min = 120;
		maxRange.max = 168;
		}
	if(tempoName == "Vivace"){
		tempo = "Moderato – moderately (108–120 BPM)";
		minRange.min = 168;
		maxRange.max = 176;
	}	
	if(tempoName == "Vivacissimo"){
		tempo = "Moderato – moderately (108–120 BPM)";
		minRange.min = 172;
		maxRange.max = 176;
	}
	if(tempoName == "Allegrissimo or Allegro vivace"){
		tempo = "Allegrissimo or Allegro vivace – very fast (172–176 BPM)";
		minRange.min = 172;
		maxRange.max = 176;
	}
	if(tempoName == "Presto"){
		tempo = "Presto – very, very fast (168–200 BPM)</option>";
		minRange.min = 168;
		maxRange.max = 200;
	}
	if(tempoName == "Prestissimo"){
		tempo = "Prestissimo – even faster than Presto (200 BPM and over)";
		minRange.min = 200;
		maxRange.max = 300;
	}
	
	
}

//Draw staffs
function drawStaffs(){
	
	var offset = 60.5;
	//Draw Horizontal Lines
	for(var num = 0; num < 10; num++){
		for(var count = 0; count < 5; count++){
			ctx.beginPath();
			ctx.moveTo(ctx.canvas.width/6+10, offset);
			ctx.lineTo(760, offset);
			ctx.lineWidth = .5;
			ctx.stroke();
			offset += 8;
		}
		offset += 40;
	}

	//Draw Vertical Lines
	offset = 60.5;
	for(var staff = 0; staff < 5; staff++){
		//left
		ctx.beginPath();
		ctx.moveTo(ctx.canvas.width/6+10, offset);
		ctx.lineTo(ctx.canvas.width/6+10, offset+112);
		ctx.stroke();
		//right
		ctx.beginPath();
		ctx.moveTo(760, offset);
		ctx.lineTo(760, offset+112);
		ctx.stroke();
		offset += 160;
	}
	/*
	//first
	ctx.beginPath();
	ctx.moveTo(ctx.canvas.width/6+10, 60.5);
	ctx.lineTo(ctx.canvas.width/6+10, 172.5);
	ctx.stroke();
	//second
	ctx.beginPath();
	ctx.moveTo(760, 60.5);
	ctx.lineTo(760, 172.5);
	ctx.stroke();*/


}



function buttonCheck(){
//check for eigth note
if(mousePos.y < 40){
	currNote = "eight";
}
if(mousePos.y > 40 && mousePos.y < 70){
	currNote = "quarter";
}
if(mousePos.y > 70 && mousePos.y < 100){
	currNote = "dot";
}
if(mousePos.y > 100 && mousePos.y <130){
	currNote = "half";
}
if(mousePos.y > 130 && mousePos.y < 160){
	currNote = "whole";
}

}

//Draw the note pallet
function drawPallet(){
	//Draw the seperation bar
	ctx.beginPath();
	ctx.moveTo(20.5,0);
	ctx.lineTo(20.5, ctx.canvas.height);
	ctx.stroke();
	// Draw Note Buttons
	draw8Note(12,10);
	drawQuarterNote(12,40);
	drawDotNote(12,70);
	drawHalfNote(12,100);
	drawWholeNote(12,130);
	

}

// Get user input and use it to draw the title on the sheet.
function drawTitle(){
	ctx.font="20px Georgia";
	var titleInput = document.getElementById('titleInput').value;
	var textWidth = ctx.measureText(titleInput).width;
	ctx.fillText(titleInput,(globalWidth/2)-(textWidth/2)-13,30);
}

function drawBPMnote(x,y){
	ctx.beginPath();
	ctx.moveTo(x,y);
	ctx.lineTo(x,y+10);
	ctx.stroke();

	ctx.save();
    ctx.beginPath();
    ctx.ellipse(x-3, y+10, 3, 2, 0, 0, Math.PI*2);
    ctx.fill();
    ctx.restore();}

// Draw function, encases all of the draw calls.
// Will be called repeatedly
function draw(){
	// Update canvas window size vars to be a 
	// percentage of the browser window.
	//globalWidth = window.innerWidth/1.5;
	//globalHeight = (window.innerHeight/3)*2;
	// !!! Probably needs to be adjusted !!!
	//Setting canvas width and height
	//ctx.canvas.width = globalWidth;
	//ctx.canvas.height = globalHeight;
	clear();
	// Draw the blank sheet
	drawStaffs();
	// Draw the notes pallet
	drawPallet();
	// Draw sheet title
	drawTitle();
	// Draw tempo on sheet
	getTempo();
	// Draw time signature
	getTimeSig();
	//
	drawBPMnote((ctx.canvas.width/6)+20.5,40.5);

	drawCursorNote();
	drawPlacedNotes();

}

// Collision detect the note selection
function noteSelect(){
	//attempt to draw a note
	ctx.beginPath();
	ctx.moveTo(10,10);
	ctx.lineTo(10,20);
	ctx.stroke();

}


function drawQuarterNote(x,y){
	ctx.beginPath();
	ctx.moveTo(x,y);
	ctx.lineTo(x,y+20);
	ctx.stroke();

	ctx.save();
    ctx.beginPath();
    ctx.ellipse(x-5, y+20, 5, 3, 0, 0, Math.PI*2);
    ctx.fill();
    ctx.restore();
}

function draw8Note(x,y){
	ctx.beginPath();
	ctx.moveTo(x,y);
	ctx.lineTo(x+4,y+8);
	ctx.moveTo(x+4,y+8);
	ctx.lineTo(x+6,y+6)

	ctx.moveTo(x,y);
	ctx.lineTo(x,y+20);
	ctx.stroke();
	ctx.save();

    ctx.beginPath();
    ctx.ellipse(x-5, y+20, 5, 3,0, 0, Math.PI*2);
    ctx.fill();
    ctx.restore();
		x+=15;	
}

function drawHalfNote(x,y){
	ctx.beginPath();
	ctx.moveTo(x,y);
	ctx.lineTo(x,y+20);
	ctx.stroke();
	ctx.save();
	
    ctx.beginPath();
    ctx.ellipse(x-5, y+20, 5, 3, 0, 0, Math.PI*2);
    ctx.fill();
	ctx.beginPath();
	ctx.ellipse(x-5, y+20, 3, 2,0, 0, Math.PI*2);
	ctx.fillStyle = "white";
	ctx.fill();
    ctx.restore();
}

function drawWholeNote(x,y){
	ctx.beginPath();
    
    ctx.ellipse(x-5, y+20, 7, 4,0, 0, Math.PI*2);
	
    ctx.fill();
	
	ctx.beginPath();
	ctx.save();
	 ctx.ellipse(x-5, y+20, 3, 2,0, 0, Math.PI*2);
	 ctx.fillStyle = "white";
	 ctx.fill();
    ctx.restore();	
}

function drawDotNote(x,y){
	ctx.beginPath();
	ctx.moveTo(x,y);
	ctx.lineTo(x,y+20);
	ctx.stroke();

	ctx.save();
    ctx.beginPath();
	ctx.fillStyle = "black";
    ctx.ellipse(x-5, y+20, 5, 3, 0, 0, Math.PI*2);
    ctx.fill();
	
    ctx.beginPath();
	ctx.ellipse(x+4, y+17, 1, 1, 0, 0, Math.PI*2);
	ctx.fill(); 
	ctx.restore();
}

//main loop, called every 50ms
setInterval(function(){
	draw();
}, 50);	


}